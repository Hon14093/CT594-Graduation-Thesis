generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model brand {
  brand_id     Int       @id @default(autoincrement())
  brand_name   String?   @unique @db.VarChar(100)
  slug         String?
  date_created DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  product      product[]
}

model category {
  category_id   Int       @id @default(autoincrement())
  category_name String?   @unique @db.VarChar(100)
  slug          String?
  date_created  DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  product       product[]
}

model product {
  product_id   String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_name String    @db.VarChar(200)
  brand_id     Int
  category_id  Int
  description  String?
  image_url    String[]
  adapter      adapter[]
  cable        cable[]
  dock         dock[]
  laptop       laptop[]
  monitor      monitor[]
  brand        brand     @relation(fields: [brand_id], references: [brand_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_brand")
  category     category  @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_category")
  ram          ram[]
  review       review[]
  storage      storage[]
}

model laptop {
  laptop_id              String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id             String   @db.Uuid
  laptop_model           String
  cpu                    String
  gpu                    String
  ram_installed          Int
  ram_type               String
  frequency_mhz          Int
  ram_slots              Int
  max_ram                Int
  refresh_rate           Int
  panel                  String
  screen_size            Float    @db.Real
  resolution             String
  monitor_tech           String?
  sound_tech             String?
  os                     String
  battery_wh             Int?
  weight_kg              Float?   @db.Real
  wifi_version           String?
  bluetooth_version      String?
  ports                  Json?    @db.Json
  storage_installed_gbs  Int
  storage_installed_type String
  storage_slots          Int
  storage_slots_type     String[]
  max_storage_gb         Int?
  price                  Float    @db.Real
  qty_in_stock           Int?
  laptop_name            String
  product                product  @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_laptop_product")
}

model monitor {
  monitor_id         String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  monitor_name       String  @db.VarChar(255)
  monitor_model      String  @db.VarChar(100)
  panel              String  @db.VarChar(50)
  brightness_nits    Int
  response_time_ms   Float   @db.Real
  bit_depth          String  @db.VarChar(50)
  color_range        String  @db.VarChar(100)
  resolution         String  @db.VarChar(50)
  screen_size_inches Float   @db.Real
  refresh_rate_hz    Int
  ports              Json    @db.Json
  vesa_mount         String  @db.VarChar(50)
  monitor_tech       String  @db.VarChar(100)
  in_box_component   String
  power_w            Float   @db.Real
  weight_kg          Float   @db.Real
  product_id         String  @db.Uuid
  price              Float?  @db.Real
  qty_in_stock       Int?
  product            product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_monitor")
}

model ram {
  ram_id        String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  ram_model     String
  ram_type      String
  capacity_gb   Int
  frequency_mhz Int
  voltage       Float   @db.Real
  latency       String
  price         Float   @db.Real
  product_id    String  @db.Uuid
  ram_name      String
  qty_in_stock  Int?
  product       product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_ram")
}

model dock {
  dock_id               String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id            String  @db.Uuid
  dock_model            String  @db.VarChar(100)
  connection_port       String  @db.VarChar(50)
  max_data_rate_gbps    Float   @db.Real
  max_output_watt       Float   @db.Real
  cable_length_cm       Int
  material              String  @db.VarChar(100)
  dimensions_mm         String  @db.VarChar(100)
  max_external_monitors Int     @default(0)
  max_resolution        String  @default("0") @db.VarChar(50)
  hdmi                  Json    @default("{}")
  usb_a_ports           Json    @default("{}")
  usb_c_ports           Json    @default("{}")
  sd_card_slot          Boolean @default(false)
  microsd_card_slot     Boolean @default(false)
  audio_jack_type       String  @default(dbgenerated("false")) @db.VarChar(50)
  price                 Float   @db.Real
  qty_in_stock          Int
  dock_name             String?
  display_port          Json?
  ethernet_speed_gbps   Float?  @db.Real
  product               product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dock_product")
}

model adapter {
  adapter_id          String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id          String  @db.Uuid
  adapter_model       String  @db.VarChar(255)
  adapter_name        String
  input_port          String  @db.VarChar(50)
  output_port         String  @db.VarChar(50)
  hdmi_version        String? @db.VarChar(20)
  dp_version          String? @db.VarChar(20)
  max_resolution      String? @db.VarChar(50)
  ethernet_speed_mbps Int?
  max_data_rate_gbps  Float?  @db.Real
  max_output_watt     Float?  @db.Real
  price               Float   @db.Real
  qty_in_stock        Int     @default(0)
  product             product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dock_product")
}

model cable {
  cable_id            String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id          String  @db.Uuid
  cable_model         String  @db.VarChar(255)
  cable_name          String  @db.VarChar(255)
  connector_a         String  @db.VarChar(50)
  connector_b         String  @db.VarChar(50)
  cable_length_cm     Decimal @db.Decimal(5, 2)
  material            String  @db.VarChar(100)
  weight_g            Int?
  hdmi_version        String? @db.VarChar(20)
  dp_version          String? @db.VarChar(20)
  max_resolution      String? @db.VarChar(50)
  ethernet_speed_mbps Int?
  max_data_rate_mbps  Float?  @db.Real
  max_output_watt     Float?  @db.Real
  price               Float   @db.Real
  qty_in_stock        Int     @default(0)
  product             product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dock_product")
}

model storage {
  storage_id       String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  storage_model    String  @db.VarChar(255)
  capacity_gb      Int
  interface        String  @db.VarChar(50)
  form_factor      String  @db.VarChar(50)
  physical_profile String? @db.VarChar(50)
  weight_g         Int?
  read_speed_mbps  Int
  write_speed_mbps Int
  price            Decimal @db.Decimal(10, 2)
  qty_in_stock     Int     @default(0)
  product_id       String  @db.Uuid
  storage_name     String
  product          product @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "fk_monitor")
}

model review {
  review_id   String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  review_date DateTime @default(now()) @db.Timestamp(6)
  star        Int
  comment     String?  @db.VarChar(1000)
  product_id  String   @db.Uuid
  account_id  String   @db.Uuid
  product     product  @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "fk_product_review")
}
